function tick(){const e=clock.getElapsedTime();group.rotation.y=.1*e,renderer.render(scene,camera),camera.lookAt(0,0,0),controls.update(),requestAnimationFrame(tick)}const container=document.querySelector("canvas"),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);camera.position.z=2,camera.position.x=.5,camera.position.y=.5,scene.add(camera);const textureLoader=new THREE.TextureLoader,circleTexture=textureLoader.load("./img/circle.png"),count=100,distance=4,points=new Float32Array(3*count),colors=new Float32Array(3*count);for(let e=0;e<points.length;e++)points[e]=THREE.MathUtils.randFloatSpread(2*distance),colors[e]=Math.random();const Geometry=new THREE.BufferGeometry;Geometry.setAttribute("position",new THREE.Float32BufferAttribute(points,3)),Geometry.setAttribute("color",new THREE.Float32BufferAttribute(colors,3));const pointMaterial=new THREE.PointsMaterial({vertexColors:THREE.VertexColors,size:.4,map:circleTexture,alphaTest:.01,transparent:!0}),pointsObject=new THREE.Points(Geometry,pointMaterial),group=new THREE.Group;group.add(pointsObject),scene.add(group);const renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,canvas:container});renderer.setClearColor(0,0),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const controls=new THREE.OrbitControls(camera,renderer.domElement),clock=new THREE.Clock;let mouseX=0;window.addEventListener("mousemove",e=>{mouseX=e.clientX}),tick(),window.addEventListener("resize",()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))});